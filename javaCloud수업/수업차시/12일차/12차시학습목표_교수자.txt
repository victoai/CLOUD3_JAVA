

1. 상속받는 법 :  상속   is a  확장해서 더 구체적인 클래스를 정의할 때   ( 예시 코드 :  Student,...)  => 실습 
2. 상속관계에서 생성자 호출 순서는 정해져 있다 !!  알고 있어야 한다  문법
3. 상속이 주는 잇점
    코드유지 보수및 확장성
    부모로 다루면서 다형성 누리기
4. 접근제어자 protected 알아보기
5. super.부모매서드 활용예시 

6. 다형성을 얻기 위한 방법 배우기 ( 상속관계)  - 부모의 매서드 오버라이드  (부모의 매서드 재정의 )
    -부모의  매서드 재정의  
   - 부모로 다루더라도 자식의 매서드가 우선권을 갖는다 
   - 자식객체들을 부모형참조변수 배열에 저장하기 
   - 춤추기 
   - 짖어
   - 음료마시기


   




상속관계에서 다형성 예제를 만들고  발표하기 !!!
 



***** 
상속관계에서
부모의 매서드를 오버라이딩하면 생기는 잇점 !!!
부모의 매서드를 꼭 오버라이드 해야 하나요?
부모로 다뤄졌을 때  (부모형 참조형변수)
자식의 기능이 올바르게 동작하기 위해서는 오버라이드가 필요합니다.



 ******  맛있는 퀴즈 !!
class AcornStudent{
       public void 음료마시기(){  
                  System.out.println("음료마시기 기능을 자신에 맞게 오버라이드 하세요");
       }
}

//상속 받아서 클래스를 작성하고 음료마시기를  자신에 맞게 오버라이드 하세요 !!!  < 라떼또는 ,아메커피, 초코라떼, 딸기라떼,  아이스티  중에서 선택 >  예시 )  주연이는 초코를 먹고 싶어요 !
//저는 여러분이 만든 클래스를  AcornStudent 배열로 다룰것입니다.
그리고 음료마시기( )라고 호출합니다. 그러면 각자 원하는 음료가 잘 출력되어야 합니다..
오버라이드를 하지 않았다면.. 오버라이드하세요 메시지가 나오겠죠 
맛있는 음료를 위해서 상속과 오버라이드에 성공하세요 ^^
 



1. 다형성 맛보기- 상속관계에서 ( 여러분을 춤추게  하는 코드를 작성해 보기)
2. 상속관계에서 타입변환이 가능하다
3. upcasting :  가능하다,    부모형으로 축소가 된다 (해석의 도구가 축소됨)
  업캐스팅된 객체를 다시 원래의 타입으로 참조하는것을 말한다 !!!
4. 부모의 매서드를 재정의 하기 기능제공
5. 다형성을 맛보기 ( 애니멀)

6. downcasting 무엇인가? 오해하면 안된다
    무엇을 다운캐스팅으로 부르는가?





***** 
상속관계에서
부모의 매서드를 오버라이딩하면 생기는 잇점 !!!
부모의 매서드를 꼭 오버라이드 해야 하나요?
부모로 다뤄졌을 때  (부모형 참조형변수)
자식의 기능이 올바르게 동작하기 위해서는 오버라이드가 필요합니다.

##에이콘학생으로 음료마시기를 호출시 자신의 고유의 동작방식으로 실행되어야 한다 
*********


 