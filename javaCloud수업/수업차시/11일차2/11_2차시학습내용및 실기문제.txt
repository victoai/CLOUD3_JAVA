상속관계에서의 업캐스팅과 다운캐스팅 !!!!  ( 객체지향에서 너무 중요하다) 
친구들 예제를 보면서 같이 업캐스팅과 다운캐스팅 생각해 보기
upcasting
downcasting

instanceof 연산자 , 객체의 type을 확인할 수 있는 연산자 임
-활용되는 상황 배우기

상속관계에서 생성자 호출 규칙에 대해 알기
protected    접근제어자


부모형으로 존재하는 클래스  :
객체지향의 좋은 설계에 사용된다.
실체를 만들수 없다(new 될 수 없다)
자식을 통해서 new  될 수 있다. 
=>부모형으로만 사용하겠다 ( 의미는 다형성의 잇점을 누리겠다는 의미) 
추상클래스
인터페이스
   CalculatorI 인터페이스를 기반으로는 Calculator클래스 각자 작성하기
   특정클래스에 의존적인  프로그램 작성
   특정클래스에 의존적이지 않은 프로그램 작성 (인터페이스가 있으면 특정 클래스에 의존적이지 않음)

   상속으로 클래스 작성시 익명클래스를 작성하는 방법 배우기 



실습하기!!!

0. 상속관계에서 다형성 예제 반드시 만들기 !!!
1. 상속관계 is a  클래스를 두 개 만들고  실행해 보는 예제 만들기 ( 혼자 실습 )
2. 상속관계 is a  클래스를 두 개 만들고  실행해 보는 예제 만들기 ( 2인 1조 완성하기 ) 
5. 객체배열다루는 연습하기

 Day객체로 일정관리하기
  
 객체배열다루기

 Day객체만들기
 Day객체 여러개 (객체배열)을 이용하여 일정관리 프로그램 작성하기
    :  제공된 Day 클래스를 이용해서 일정관리하는 프로그램 작성하기
       원하는 Day 클래스를 이용해서 일정관리하는 프로그램 작성하기
  
  
  -simple한 일정 등록, 조회  (반복문 사용안해도 되요 일정여러개를 Day[] days = new Day[5]에다 저장(등록)하고 조회하기 해보세요
  - 메뉴를 통한 일정관리프로그램
  - Day와 일정을 관리하는 DayMgt 클래스 별도로 작성하여 일정관리를 작성해 보세요(심화)





