되던지기를 해야 하는 경우 
 
1)   매서드 내부에서도 일부처리하고 상위매서드에서 예외의  일부처리해야할 때  상위매서드에 다시 위임할 수 있다    
내부 처리:
 메서드에서는 예외가 발생할 수 있습니다. 예외가 발생하면, 해당 메서드에서 로그를 남기거나 필요한 처리를 하고, 예외를 다시 던집니다.
상위 메서드로 예외 위임:
예외를 던지면, 이를 호출한 상위 메서드에서 다시 예외를 받을 수 있습니다. 
이 상위 메서드에서는 예외를 추가로 처리하거나  예외를 다시 던져 최종적으로 호출한 곳에서 처리하도록 할 수 있습니다.




2)  예외를  다른 예외로 변환해야 할 때

예외를 특정 예외 타입으로 처리하기보다는, 특정 예외를 더 일반적이거나 상위 예외 타입으로 변환하여 던지는 경우가 있습니다. 이때도 예외를 다시 던지는 방식이 사용될 수 있습니다.
 
public void handleFileOperation() throws IOException {
    try {
        // 파일 처리 작업
    } catch (FileNotFoundException e) {
        // FileNotFoundException을 IOException으로 변경하여 던짐
        throw new IOException("File not found during operation", e);
    }
}
 
결론
되던지기는 예외를 내부에서 처리한 후, 호출한 메소드로 예외를 전달해야 할 때 사용됩니다.
 주로 예외를 로깅하거나, 중간 처리 후 예외를 위임할 필요가 있을 때 사용됩니다. 
 이를 통해 예외 처리 로직을 보다 유연하게 만들고, 호출자에게 예외를 적절히 전달할 수 있습니다.