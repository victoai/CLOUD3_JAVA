
학생성적정보를 저장할 자료형이 필요해!
과자정보를 저장할 자료형이 필요해 !
고객정보를 저장할 자료형이 필요해!
구조가있는 데이타를 처리가 필요성이 있음 


=>  사용자정의 자료형    class

  class  Score{ 
      int kor;
      int eng;
      int math;
      int tot ;
      char grade; 
 
 }

//변수선언
int a ;
//자바 배열부터  new를 통해서 메모리 확보 (heap메모리)
Score  s = new Score();   // 메모리확보 
//s는 참조형변수

s.kor=90;
s.eng=80;
s.grade='A'

System.out.println( s.kor) ;
System.out.println( s.eng ;
System.out.println( s.grade) ;



==> 아래와 같은 표현으로 정의하고 사용한다.
        변수를 직접 사용하여 프로그래밍 하는 방식이 아니라 
        객체가 제공하는 매서드를 통해서 데이터를 다루는 방식으로 프로그래밍 하는 것이  객체지향 프로그래밍 방식이다 !
///


//  학생성적을 담고 싶다면  거기에 맞는 Type 부터 정의해야 한다
//  아래의 코드는 Score형 Type을 정의하는 코드이다.
// 이런 Type의 변수를  만들고 싶다면  Score s  = new Score(); 형태의   new 코드가 반드시 필요하다  꼭 기억 !!!

 class  Score{ 
   //멤버벼수
      private int kor;
      private int eng;
      private int math;
      private int tot ;
        private  char grade; 
 
  //멤버함수 (멤버매서드) 

    // 멤버에 값을 채우는 기능     
      public void input( int kor, int eng, int math) {   // 생성자를 이용한 코드로 바뀌어야 하는 코드
                this.kor = kor;
                this.eng= eng ;
                this.math = math;
     }

  //생성자의 코드로 바꾸는 이유  (자바는 이렇게 설계된 언어이다.)
   // 생성자를 이용하는 이유 =>  생성자는 객체가 생성될 때 단 한번 호출되어 input()매서드랑 달리 여러번 호출 될 수 없어
  //  값의 변경을 막을 수 있다. (실수로 인한 값의 변경을 막는다)


//  멤버에 값을 출력하는 기능
     public void print( ){
             System.out.println( kor + " " + eng+ "  " + math + "   "  + garde) ;

     }
 }

 


 








